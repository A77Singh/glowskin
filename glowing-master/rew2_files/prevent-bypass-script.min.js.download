(() => {
  const scriptUrl = `${window.blockifyBaseUrl}/file/rigorously-script.js`;
  const isScriptPresent = Array.from(document.getElementsByTagName('script')).some((script) => script.src.includes(scriptUrl));

  if (!isScriptPresent) {
    const scripts = document.querySelectorAll('script');
    const isEnableApp = Array.from(scripts).find((script) => 'blockifyScriptTag' === script.id);

    if (isEnableApp) {
      // Hàm tạo lại blockifyOverlay
      function createBlockifyOverlay() {
        if (!document.getElementById('blockifyOverlay')) {
          const blockifyOverlay = document.createElement('div');
          blockifyOverlay.id = 'blockifyOverlay';
          blockifyOverlay.style.position = 'fixed';
          blockifyOverlay.style.width = '100vw';
          blockifyOverlay.style.height = '100vh';
          blockifyOverlay.style.top = 0;
          blockifyOverlay.style.left = 0;
          blockifyOverlay.style.backgroundColor = 'transparent'; // Overlay trong suốt
          blockifyOverlay.style.zIndex = '9999';
          blockifyOverlay.style.display = 'block';
          document.body?.appendChild(blockifyOverlay);
        }
      }

      // Hàm xóa blockifyOverlay
      function removeBlockifyOverlay() {
        const blockifyOverlay = document.getElementById('blockifyOverlay');
        if (blockifyOverlay) {
          blockifyOverlay.remove();
        }
      }
      // Thiết lập MutationObserver để theo dõi thay đổi DOM
      const observer = new MutationObserver(() => {
        if (window.blockifyChecking) {
          if (window.blockifyisPressEsc) {
            const blockifyOverlay = document.getElementById('blockifyOverlay');
            // Nếu blockifyOverlay bị xóa, tạo lại nó
            if (!blockifyOverlay) {
              createBlockifyOverlay();
            }
          }
        } else {
          // Nếu blockifyChecking là false, ngừng quan sát và xóa overlay
          observer.disconnect();
          removeBlockifyOverlay();
        }
      });

      // Bắt đầu quan sát thay đổi trong DOM
      if (document?.body) observer.observe(document.body, { childList: true, subtree: true });

      // Dừng quan sát ngay lập tức nếu blockifyChecking là false
      if (!window.blockifyChecking) {
        observer.disconnect();
        removeBlockifyOverlay();
      }
    }
  }
})();
